#####################################################################
#	Macros
#####################################################################

# Conditional G28
[gcode_macro CG28]
gcode:
	{% if printer.toolhead.homed_axes != "xyz" %}
		G28
	{% endif %}


# Park bed in center for heatsoaking
[gcode_macro PARK]
default_parameter_FORCE: 0
gcode:
	{% if printer.idle_timeout.state != "Printing" or FORCE|int == 1 %}
		CG28                           ; Home if not already homed
		SAVE_GCODE_STATE NAME=PARK
		G90                            ; absolute positioning
		G0 X175 Y175 Z30 F5000        ; Move to position
		RESTORE_GCODE_STATE NAME=PARK
	{% else %}
		{ action_respond_info("PARK disabled while printing!") }
	{% endif %}


[gcode_macro PARKCENTER]
gcode:
    {% set Z = params.Z|default(30)|float %}
    SAVE_GCODE_STATE NAME=PARKCENTER_state
    CG28                          ; Home if not already homed
    G90                            ; absolute positioning
    G0 X175 Y175 Z{Z} F12000       ; move to center
    RESTORE_GCODE_STATE NAME=PARKCENTER_state


# Park front for maintenance / cleaning
[gcode_macro PARKFRONT]
gcode:
	{% if printer.idle_timeout.state != "Printing" %}
		CG28                           ; Home if not already homed
		SAVE_GCODE_STATE NAME=PARKFRONT
		G90                            ; absolute coords
		G1 Z100 X110 Y10 F5000         ; Move to position
		RESTORE_GCODE_STATE NAME=PARKFRONT
	{% else %}
		{ action_respond_info("PARKFRONT disabled while printing!") }
	{% endif %}
	

  # Park on right side of bucket so oozing is caught by bucket
[gcode_macro PARKBUCKET]
gcode:
    CG28                           ; Home if not already homed
    SAVE_GCODE_STATE NAME=PARKBUCKET
    G90                            ; absolute coords
    G1 X134 Y357 F5000         		; Move to position
    RESTORE_GCODE_STATE NAME=PARKBUCKET


[gcode_macro PRINT_START]
default_parameter_EXTRUDER: 235
default_parameter_BED: 105
gcode:
    M104 S{EXTRUDER}
    M140 S{BED}
    heating_bed_indicator
	G28
    CLEAN_NOZZLE 
    M109 S{EXTRUDER}
    M190 S{BED}

    PARKCENTER
	QUAD_GANTRY_LEVEL CALIBRATE=false
    BED_MESH_PROFILE LOAD=hot
	CLEAN_NOZZLE
	CALIBRATE_Z
	SECURE_DOCK_PROBE
    CLEAN_NOZZLE
    
	G0 E1 F3600         ; Extrude to prime nozzle
  	M109 S{EXTRUDER}
  	start_printing_indicator
	M117 Printing...
    

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    finished_printing_indicator
	M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    
	TIMELAPSE_TAKE_PARKED_FRAME
	PARKBUCKET
	TIMELAPSE_RENDER	
	
	
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}  
        {% set z_safe = 20.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    PARKFRONT
	

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME
    
    
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
	cancel_printing_indicator
	

######################################################################
# RGBW Status Indication
######################################################################
	
[gcode_macro heating_bed_indicator]
# turn on RED full brightness, turn off all other LED colours 
gcode:
	set_pin PIN=RED_RGB_LED VALUE=255
	set_pin PIN=GREEN_RGB_LED VALUE=0
	set_pin PIN=BLUE_RGB_LED VALUE=0
	set_pin PIN=WHITE_RGB_LED VALUE=0

[gcode_macro heating_nozzle_indicator]
# turn on BLUE full brightness, turn off all other LED colours 
gcode:
	set_pin PIN=BLUE_RGB_LED VALUE=255
	set_pin PIN=RED_RGB_LED VALUE=0
	set_pin PIN=GREEN_RGB_LED VALUE=0
	set_pin PIN=WHITE_RGB_LED VALUE=0

[gcode_macro starting_sequence_indicator]
# turn on RED and BLUE full brightness, turn off all other LED colours 
gcode:
	set_pin PIN=BLUE_RGB_LED VALUE=255
	set_pin PIN=RED_RGB_LED VALUE=255
	set_pin PIN=GREEN_RGB_LED VALUE=0
	set_pin PIN=WHITE_RGB_LED VALUE=0
	
[gcode_macro start_printing_indicator]
# turn on ALL colours full brightness
gcode:
	set_pin PIN=BLUE_RGB_LED VALUE=191
	set_pin PIN=RED_RGB_LED VALUE=59
	set_pin PIN=GREEN_RGB_LED VALUE=158
	set_pin PIN=WHITE_RGB_LED VALUE=0
	progress_led_off
	caselight_on
	
[gcode_macro finished_printing_indicator]
# turn progess GREEN, RGB LEDs to initial colours 
gcode:
	set_pin PIN=BLUE_RGB_LED VALUE=191
	set_pin PIN=RED_RGB_LED VALUE=59
	set_pin PIN=GREEN_RGB_LED VALUE=158
	set_pin PIN=WHITE_RGB_LED VALUE=0
	SET_LED LED=lights RED=0 GREEN=1 BLUE=0 TRANSMIT=1
	UPDATE_DELAYED_GCODE ID=delayed_progress_led_on DURATION=300

[gcode_macro cancel_printing_indicator]
# turn progess GREEN, RGB LEDs to initial colours 
gcode:
	set_pin PIN=BLUE_RGB_LED VALUE=191
	set_pin PIN=RED_RGB_LED VALUE=59
	set_pin PIN=GREEN_RGB_LED VALUE=158
	set_pin PIN=WHITE_RGB_LED VALUE=0
	SET_LED LED=lights RED=1 GREEN=0 BLUE=0 TRANSMIT=1
	UPDATE_DELAYED_GCODE ID=delayed_progress_led_on DURATION=300

[gcode_macro lights_out_time]
# turn off all lights 
gcode:
	set_pin PIN=BLUE_RGB_LED VALUE=0
	set_pin PIN=RED_RGB_LED VALUE=0
	set_pin PIN=GREEN_RGB_LED VALUE=0
	set_pin PIN=WHITE_RGB_LED VALUE=0
	caselight_off
	progress_led_off
	
[gcode_macro PROGRESS_LED_OFF]
# turn off neopixels 
gcode:
	SET_LED LED=lights RED=0 GREEN=0 BLUE=0 TRANSMIT=1

[gcode_macro PROGRESS_LED_ON]
# turn on neopixels (default color)
gcode:
	SET_LED LED=lights RED=0.23 GREEN=0.62 BLUE=0.75 TRANSMIT=1

[delayed_gcode delayed_progress_led_off]
gcode:
	progress_led_off
initial_duration: 5

[delayed_gcode delayed_progress_led_on]
gcode:
	progress_led_on

#####################################################################
#  Heating status LEDs
#####################################################################

[gcode_macro M105]
rename_existing: M105.1
gcode:  
 
     M105.1
     # if the extruder is off
     {% if printer.extruder.target == 0 %}
 
      # Set the LED to red if the extruder is still hot, otherwise set to green
        {% if printer.extruder.temperature > 60.0 %}
           #SET_LED LED=lights RED=1 GREEN=0 BLUE=0 TRANSMIT=1
            heating_bed_indicator
        {% else %}
           #SET_LED LED=lights RED=0 GREEN=1 BLUE=0 TRANSMIT=1
            finished_printing_indicator
        {% endif %}     
 
     {% else %}
  
        # if the extruder temp is at target temperature 
        {% if printer.extruder.temperature >= printer.extruder.target - 4.0 %}
            heating_bed_indicator
        # if the extruder is still heating
        {% else %}
            {% set scaler = printer.extruder.temperature|float / printer.extruder.target|float %}
            {% if scaler|float >= 0.25 and scaler|float <= 0.5 %}
                set_pin PIN=RED_RGB_LED VALUE=128
                set_pin PIN=GREEN_RGB_LED VALUE=255
            	set_pin PIN=BLUE_RGB_LED VALUE=0
	            set_pin PIN=WHITE_RGB_LED VALUE=0
            {% endif %}
            {% if scaler|float >= 0.5 and scaler|float <= 0.75 %}
                set_pin PIN=RED_RGB_LED VALUE=255
                set_pin PIN=GREEN_RGB_LED VALUE=255
            	set_pin PIN=BLUE_RGB_LED VALUE=0
	            set_pin PIN=WHITE_RGB_LED VALUE=0
            {% endif %}
            {% if scaler|float >= 0.75 %}
                set_pin PIN=RED_RGB_LED VALUE=255
                set_pin PIN=GREEN_RGB_LED VALUE=128
            	set_pin PIN=BLUE_RGB_LED VALUE=0
	            set_pin PIN=WHITE_RGB_LED VALUE=0
           {% endif %}  
       {% endif %}
    {% endif %}


#####################################################################
#  Neopixel progess LEDs
#####################################################################
	
[gcode_macro M73]
rename_existing: M73.1
default_parameter_LEDCOUNT: 24  # Set to your chain_count
default_parameter_NAME: lights # Set to the name of your neopixel
gcode:
    M73.1
    
    {% if 'P' in params %}
        {% for led in range(1, LEDCOUNT|int +1 )  %}
            {% if ( P|int / 100 * LEDCOUNT|int ) >= led %}
                SET_LED LED={ NAME } RED=0.23 GREEN=0.62 BLUE=0.75 INDEX={ led } TRANSMIT=1
            {% else %}
                SET_LED LED={ NAME } RED=0 GREEN=0 BLUE=0 INDEX={ led } TRANSMIT=1
            {% endif %}
        {% endfor %}
        
    {% endif %}


#####################################################################
#  CASELIGHT
#####################################################################

[gcode_macro CASELIGHT_ON]
gcode:
	SET_PIN PIN=caselight VALUE=0.2
	{action_respond_info("Caselight on")}
    
[gcode_macro CASELIGHT_OFF]
gcode:
	SET_PIN PIN=caselight VALUE=0.0
	{action_respond_info("Caselight off")}

[gcode_macro CASELIGHT]
gcode:
	{%if printer['output_pin caselight'].value == 0 %}
		CASELIGHT_ON
	{% else %}
		CASELIGHT_OFF
	{% endif %}
	

[gcode_macro TIMELAPSE_TAKE_PARKED_FRAME]
gcode:
	SAVE_GCODE_STATE NAME=SNAPSHOT
	G1 E-10 F2100 ;Retract
	G91 ;Relative
	G1 Z5 ;move up 5
	G90 ;Absolute coordinates
	G1 X5 Y205 F6000 ;Move away from the print
	
	G4 P500 ;Wait for 500ms
	TIMELAPSE_TAKE_FRAME ;Take frame
	G4 P500 ;Wait for 500ms
	G1 E10 F2100 ;Extrude back
	
	RESTORE_GCODE_STATE NAME=SNAPSHOT MOVE=1 MOVE_SPEED=6000


[gcode_macro TIMELAPSE_TAKE_FRAME]
gcode:
	{action_call_remote_method("timelapse_newframe")}


[gcode_macro TIMELAPSE_RENDER]
gcode:
	{action_call_remote_method("timelapse_render")}